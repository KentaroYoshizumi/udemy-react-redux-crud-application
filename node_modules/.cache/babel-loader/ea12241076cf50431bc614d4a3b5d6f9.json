{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/events_index.js\";\nimport React, { Component } from 'react'; // https://react-redux.js.org/5.x/api/connect\n\nimport { connect } from 'react-redux'; // https://lodash.com/docs/4.17.11#map\n\nimport _ from 'lodash'; // https://github.com/ReactTraining/react-router/blob/v4.2.2/packages/react-router-dom/docs/api/Link.md\n\nimport { Link } from 'react-router-dom';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport { readEvents } from '../actions';\n\nclass EventsIndex extends Component {\n  componentDidMount() {\n    // https://reactjs.org/docs/react-component.html#componentdidmount\n    // 以下のrenderメソッドが実行された後にこのcomponentDidMountメソッドは実行されます。\n    // 尚、公式ドキュメントに「You may call setState() immediately in componentDidMount().」と書かれているように、\n    // 本メソッドの中で状態を変更することが許されています。\n    // 状態が変わった場合は適宜その状態に紐づくDOMの再描画が行われることになります。\n    // 本アプリケーションの場合は、イベント一覧の取得はテーブル描画後に行っています。\n    // そのため、最初に空のイベントテーブルを描画し、イベント一覧が取得できたら\n    // イベントの内容をテーブル上に表示するという流れでレンダリングしています。\n    this.props.readEvents();\n  }\n\n  renderEvents() {\n    // lodashのmapメソッドを使用して、collection(配列)の全要素を1つずつ取り出し\n    // テーブルの行を配列として取得します。\n    // keyにはユニークな値をアサインするためにeventのidを設定しています。\n    // また、タイトルをクリックしたら該当のeventの詳細画面に遷移するようにLinkを設定しています。\n    return _.map(this.props.events, event => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableRowColumn, {\n        children: event.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableRowColumn, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/events/${event.id}`,\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableRowColumn, {\n        children: event.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  }\n\n  render() {\n    const style = {\n      position: \"fixed\",\n      right: 12,\n      bottom: 12\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FloatingActionButton, {\n        style: style,\n        containerElement: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/events/new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 63\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(ContentAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          displaySelectAll: false,\n          adjustForCheckbox: false,\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          displayRowCheckbox: false,\n          children: this.renderEvents()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex);","map":{"version":3,"sources":["/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/events_index.js"],"names":["React","Component","connect","_","Link","Table","TableBody","TableHeader","TableHeaderColumn","TableRow","TableRowColumn","FloatingActionButton","ContentAdd","readEvents","EventsIndex","componentDidMount","props","renderEvents","map","events","event","id","title","body","render","style","position","right","bottom","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// https://react-redux.js.org/5.x/api/connect\nimport { connect } from 'react-redux'\n// https://lodash.com/docs/4.17.11#map\nimport _ from 'lodash'\n// https://github.com/ReactTraining/react-router/blob/v4.2.2/packages/react-router-dom/docs/api/Link.md\nimport { Link } from 'react-router-dom'\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn\n} from 'material-ui/Table'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\n\nimport { readEvents } from '../actions'\n\nclass EventsIndex extends Component {\n  componentDidMount() {\n    // https://reactjs.org/docs/react-component.html#componentdidmount\n    // 以下のrenderメソッドが実行された後にこのcomponentDidMountメソッドは実行されます。\n    // 尚、公式ドキュメントに「You may call setState() immediately in componentDidMount().」と書かれているように、\n    // 本メソッドの中で状態を変更することが許されています。\n    // 状態が変わった場合は適宜その状態に紐づくDOMの再描画が行われることになります。\n    // 本アプリケーションの場合は、イベント一覧の取得はテーブル描画後に行っています。\n    // そのため、最初に空のイベントテーブルを描画し、イベント一覧が取得できたら\n    // イベントの内容をテーブル上に表示するという流れでレンダリングしています。\n    this.props.readEvents()\n  }\n\n  renderEvents() {\n    // lodashのmapメソッドを使用して、collection(配列)の全要素を1つずつ取り出し\n    // テーブルの行を配列として取得します。\n    // keyにはユニークな値をアサインするためにeventのidを設定しています。\n    // また、タイトルをクリックしたら該当のeventの詳細画面に遷移するようにLinkを設定しています。\n    return _.map(this.props.events, event => (\n      <TableRow key={event.id}>\n        <TableRowColumn>{event.id}</TableRowColumn>\n        <TableRowColumn>\n          <Link to={`/events/${event.id}`}>\n            {event.title}\n          </Link>\n        </TableRowColumn>\n        <TableRowColumn>{event.body}</TableRowColumn>\n      </TableRow>\n    ))\n  }\n\n  render() {\n    const style = {\n      position: \"fixed\",\n      right: 12,\n      bottom: 12\n    }\n\n    return (\n      <React.Fragment>\n        <FloatingActionButton style={style} containerElement={<Link to=\"/events/new\" />}>\n          <ContentAdd />\n        </FloatingActionButton>\n\n        <Table>\n          <TableHeader\n            displaySelectAll={false}\n            adjustForCheckbox={false}\n          >\n            <TableRow>\n              <TableHeaderColumn>ID</TableHeaderColumn>\n              <TableHeaderColumn>Title</TableHeaderColumn>\n              <TableHeaderColumn>Body</TableHeaderColumn>\n            </TableRow>\n          </TableHeader>\n\n          <TableBody displayRowCheckbox={false}>\n            {this.renderEvents()}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ events: state.events })\n\nconst mapDispatchToProps = { readEvents }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)"]},"metadata":{},"sourceType":"module"}