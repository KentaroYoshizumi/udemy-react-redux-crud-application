{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { increment, decrement } from '../actions';\n\nclass App extends Component {\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"value: \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.increment,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.decrement,\n        children: \"-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  value: state.count.value\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch(increment()),\n  decrement: () => dispatch(decrement())\n});\n\nexport default App;","map":{"version":3,"sources":["/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/App.js"],"names":["React","Component","connect","increment","decrement","App","render","props","value","mapStateToProps","state","count","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAmBC,SAAnB,QAAoC,YAApC;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACA;AAAA,8BAAcA,KAAK,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAED,KAAK,CAACJ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,OAAO,EAAEI,KAAK,CAACH,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AAXuB;;AAc1B,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAAEF,EAAAA,KAAK,EAAEE,KAAK,CAACC,KAAN,CAAYH;AAArB,CAAL,CAA7B;;AAEA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,SAAS,EAAE,MAAMU,QAAQ,CAACV,SAAS,EAAV,CADa;AAEtCC,EAAAA,SAAS,EAAE,MAAMS,QAAQ,CAACT,SAAS,EAAV;AAFa,CAAL,CAAnC;;AAKF,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { increment,decrement } from '../actions'\n\n\nclass App extends Component {\n  render() {\n    const props = this.props\n\n    return (\n      <React.Fragment>\n      <div>value: { props.value }</div>\n      <button onClick={props.increment}>+1</button>\n      <button onClick={props.decrement}>-1</button>\n    </React.Fragment>\n      )\n    }\n  }\n\n  const mapStateToProps = state => ({ value: state.count.value })\n\n  const mapDispatchToProps = dispatch => ({\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement())\n  })\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}