{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/events_index.js\";\nimport React, { Component } from 'react';\nimport { readEvents } from '../actions';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nclass EventsIndex extends Component {\n  componentDidMount() {\n    this.props.readEvents();\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: event.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: event.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thread\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderEvents()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events/new\",\n        children: \"New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readEvents\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex);","map":{"version":3,"sources":["/Users/kentaroyoshizumi/Desktop/udemy-react-redux-crud-application/src/components/events_index.js"],"names":["React","Component","readEvents","connect","_","Link","EventsIndex","componentDidMount","props","renderEvents","map","events","event","id","title","body","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,UAAX;AACD;;AAEDO,EAAAA,YAAY,GAAG;AACb,WAAOL,CAAC,CAACM,GAAF,CAAM,KAAKF,KAAL,CAAWG,MAAjB,EAAyBC,KAAK,iBACnC;AAAA,8BACE;AAAA,kBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAASH,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAOD;;AAEDG,EAAAA,MAAM,GAAG;AAGP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBACG,KAAKP,YAAL;AADH;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAeC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBC;;AArC+B;;AAwClC,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAAEP,EAAAA,MAAM,EAAEO,KAAK,CAACP;AAAhB,CAAL,CAA7B;;AAEA,MAAMQ,kBAAkB,GAAI;AAAEjB,EAAAA;AAAF,CAA5B;AAEF,eAAeC,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { readEvents } from '../actions'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom'\n\nclass EventsIndex extends Component {\n  componentDidMount() {\n    this.props.readEvents()\n  }\n\n  renderEvents() {\n    return _.map(this.props.events, event => (\n      <tr key={event.id}>\n        <td>{event.id}</td>\n        <td>{event.title}</td>\n        <td>{event.body}</td>\n      </tr>\n    ))\n  }\n\n  render() {\n    \n\n    return (\n      <React.Fragment>\n       <table>\n         <thread>\n           <tr>\n             <th>ID</th>\n             <th>Title</th>\n             <th>Body</th>\n           </tr>\n         </thread>\n\n         <tbody>\n           {this.renderEvents()}\n         </tbody>\n       </table>\n\n       <Link to=\"/events/new\">New Event</Link>\n      </React.Fragment>\n      )\n    }\n  }\n\n  const mapStateToProps = state => ({ events: state.events })\n\n  const mapDispatchToProps = ({ readEvents })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventsIndex)\n"]},"metadata":{},"sourceType":"module"}